<launch>
	<node pkg="mavros" type="mavros_node" name="mavros" required="false" clear_params="true" output="screen" respawn="true" ns="/drone1">
		<param name="fcu_url" value="udp://127.0.0.1:14550@14555" />
		<param name="gcs_url" value="" />
		<param name="target_system_id" value="1" />
		<param name="target_component_id" value="1" />
		<param name="fcu_protocol" value="v2.0" />

		<!-- load blacklist, config -->
		<rosparam command="load" file="$(find mavros)/launch/apm_pluginlists.yaml" />
		<rosparam command="load" file="$(find mavros)/launch/apm_config.yaml" />
	</node>

	<!-- namespace for camera input -->
	  <!--<arg name="camera" default="/dronecam1"/>-->
	  <!--<arg name="camera" default="/raspicam_node"/>-->
	  <arg name="camera" default="/dronecam1"/>
	  <arg name="image" default="image_raw"/>
	  <arg name="transport" default="compressed"/>
	  <arg name="fiducial_len" default="0.14"/>
	  <arg name="dictionary" default="0"/>
	  <arg name="do_pose_estimation" default="true"/>
	  <!-- If vis_msgs set to true, pose estimation will be published with ROS standard vision_msgs -->
	  <arg name="vis_msgs" default="false"/>
	  <arg name="ignore_fiducials" default="6-25" />
	  <arg name="fiducial_len_override" default="" />
	  <arg name="verbose" default="false"/>

	  <node pkg="aruco_detect" name="aruco_detect_flags"
	    type="aruco_detect" output="screen" respawn="false"> <!--Roshan-->
	    <param name="image_transport" value="$(arg transport)"/>
	    <param name="publish_images" value="true" />
	    <param name="fiducial_len" value="$(arg fiducial_len)"/>
	    <param name="dictionary" value="$(arg dictionary)"/>
	    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
	    <param name="vis_msgs" value="$(arg vis_msgs)"/>
	    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
	    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
	    <param name="verbose" value="$(arg verbose)"/>
	    <remap from="camera/compressed" 
	        to="$(arg camera)/$(arg image)/$(arg transport)"/>
	    <remap from="camera_info" to="$(arg camera)/camera_info"/>
	    <remap from="/fiducial_transforms" to="flags/fiducial_transforms"/>
	  </node>
	  <arg name="camera" default="/camera"/>
	  <arg name="map_frame" default="map"/>     <!--/Allegiance/map-->
	  <arg name="odom_frame" default="odom"/>     <!--/Allegiance/odom-->
	  <arg name="base_frame" default="base_link"/>     <!--/Allegiance/base_link-->
	  <arg name="publish_tf" default="true"/>
	  <arg name="tf_publish_interval" default="0.2"/>
	  <arg name="future_date_transforms" default="0.0"/>
	  <arg name="publish_6dof_pose" default="true"/>
	  <arg name="read_only_map" default="true"/>
	  <arg name="pose_publish_rate" default="20"/>
	  <arg name="systematic_error" default="0.01"/>
	  <arg name="covariance_diagonal" default=""/>

	  <node type="fiducial_slam" pkg="fiducial_slam" output="screen"
	    name="fiducial_slam" ns = "Allegiance" >
	    <param name="map_file" value="$(env HOME)/.ros/slam/map.txt" />
	    <param name="map_frame" value="$(arg map_frame)" />
	    <param name="odom_frame" value="$(arg odom_frame)" />
	    <param name="base_frame" value="$(arg base_frame)" />
	    <param name="publish_tf" value="$(arg publish_tf)" />
	    <param name="tf_publish_interval" value="$(arg tf_publish_interval)" />
	    <param name="future_date_transforms" value="$(arg future_date_transforms)" />
	    <param name="read_only_map" value="$(arg read_only_map)" />
	    <param name="publish_6dof_pose" value="$(arg publish_6dof_pose)" />
	    <param name="pose_publish_rate" value="$(arg pose_publish_rate)" />
	    <param name="sum_error_in_quadrature" value="true"/>
	    <rosparam param="covariance_diagonal" subst_value="True">$(arg covariance_diagonal)</rosparam>
	    <remap from="/camera_info" to="$(arg camera)/camera_info"/>
	  </node>
	  
	 
	 <node pkg="tf" type="static_transform_publisher" name="stp_1" args="0 0 0 -1.57 0 -1.57 base_link camera_link  100"/>

	 <arg name="enable_raw" default="false"/>
	  <arg name="enable_imv" default="false"/>
	  <arg name="camera_id" default="0"/>
	  <arg name="camera_frame_id" default="raspicam"/>
	  <arg name="camera_name" default="camerav1_1280x720"/>

	  <node type="raspicam_node" pkg="raspicam_node" name="raspicam_node" output="screen">
	    <param name="private_topics" value="true"/>

	    <param name="camera_frame_id" value="$(arg camera_frame_id)"/>
	    <param name="enable_raw" value="$(arg enable_raw)"/>
	    <param name="enable_imv" value="$(arg enable_imv)"/>
	    <param name="camera_id" value="$(arg camera_id)"/>

	    <param name="camera_info_url" value="package://raspicam_node/camera_info/camerav1_1280x720.yaml"/>
	    <param name="camera_name" value="$(arg camera_name)"/>
	    <param name="width" value="1280"/>
	    <param name="height" value="720"/>

	    <!-- We are running at 90fps to reduce motion blur -->
	    <param name="framerate" value="90"/>
	  </node>

	  <!-- namespace for camera input -->
	  <!--<arg name="camera" default="/dronecam1"/>-->
	  <!--<arg name="camera" default="/raspicam_node"/>-->
	  <arg name="camera" default="/dronecam1"/>
	  <arg name="image" default="image_raw"/>
	  <arg name="transport" default="compressed"/>
	  <arg name="fiducial_len" default="0.7"/>
	  <arg name="dictionary" default="0"/>
	  <arg name="do_pose_estimation" default="true"/>
	  <!-- If vis_msgs set to true, pose estimation will be published with ROS standard vision_msgs -->
	  <arg name="vis_msgs" default="false"/>
	  <arg name="ignore_fiducials" default="" />
	  <arg name="fiducial_len_override" default="" />
	  <arg name="verbose" default="true"/>

	  <node pkg="aruco_detect" name="aruco_detect"
	    type="aruco_detect" output="screen" respawn="false" >
	    <param name="image_transport" value="$(arg transport)"/>
	    <param name="publish_images" value="true" />
	    <param name="fiducial_len" value="$(arg fiducial_len)"/>
	    <param name="dictionary" value="$(arg dictionary)"/>
	    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
	    <param name="vis_msgs" value="$(arg vis_msgs)"/>
	    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
	    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
	    <param name="verbose" value="$(arg verbose)"/>
	    <remap from="camera/compressed" 
	        to="$(arg camera)/$(arg image)/$(arg transport)"/>
	    <remap from="camera_info" to="$(arg camera)/camera_info"/>
	  </node>
	 
</launch>